# Generated by Django 4.1.7 on 2025-10-13 17:42

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_product', '0001_initial'),
        ('app_home', '0002_initial'),
        ('app_hr', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('app_customer', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ARItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('object_id', models.PositiveIntegerField()),
                ('description', models.CharField(blank=True, default='', max_length=255)),
                ('amount_original', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('status', models.CharField(choices=[('open', 'Open'), ('partial', 'Partial'), ('closed', 'Closed')], default='open', max_length=10)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ar_items', to='app_customer.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('method', models.CharField(choices=[('cash', 'Tiền mặt'), ('transfer', 'Chuyển khoản')], default='cash', max_length=25)),
                ('paid_ammount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=25)),
                ('note', models.TextField(blank=True, null=True)),
                ('fully_paid', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='app_customer.customer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('examination', 'Khám'), ('treatment_cure', 'Trị liệu chữa bệnh'), ('treatment_relax', 'Trị liệu dưỡng sinh'), ('re_examination', 'Tái khám')], default='examination', max_length=50)),
                ('note', models.TextField(blank=True, null=True)),
                ('has_come', models.BooleanField(default=False)),
                ('is_treatment', models.BooleanField(default=False)),
                ('receiving_day', models.DateField(blank=True, null=True, verbose_name='Ngày tiếp nhận')),
                ('set_date', models.TimeField(blank=True, null=True, verbose_name='Giờ hẹn đến')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_customer.customer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='diagnosis_medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('dose', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='diagnosis_service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_product.service')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.PositiveIntegerField(default=1, help_text='Số version trong phạm vi 1 khách hàng.')),
                ('is_active', models.BooleanField(default=True, help_text='Bản hiện hành dùng để tính tiền & hiển thị.')),
                ('replace_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('medicines_has_paid', models.BooleanField(default=False)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_process', to='app_customer.customer')),
                ('doctor_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_hr.hruserprofile')),
                ('medicine_discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_home.discount')),
                ('parent', models.ForeignKey(blank=True, help_text='Bản gốc mà bản này được tạo ra từ.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='app_treatment.doctorprocess')),
                ('products', models.ManyToManyField(blank=True, through='app_treatment.diagnosis_medicine', to='app_product.product')),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.TextField(blank=True, null=True, verbose_name='Chuẩn đoán')),
                ('note', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_customer.customer')),
                ('doctor_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_hr.hruserprofile')),
            ],
            options={
                'verbose_name': 'Đơn khám',
                'verbose_name_plural': 'Đơn khám',
            },
        ),
        migrations.CreateModel(
            name='TreatmentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=20, unique=True)),
                ('selected_package_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_done', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, null=True, verbose_name='Ghi chú')),
                ('diagnosis', models.TextField(blank=True, null=True, verbose_name='Chẩn đoán')),
                ('bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='treatment_requests', to='app_treatment.bill')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_requests', to='app_customer.customer')),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_requests', to='app_home.discount', verbose_name='Mã giảm giá')),
                ('doctor_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_requests', to='app_hr.hruserprofile', verbose_name='Bác sĩ (HR)')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_product.service')),
                ('treatment_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_requests', to='app_home.treatmentpackage', verbose_name='Gói liệu trình')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Ghi chú')),
                ('content', models.TextField(blank=True, null=True)),
                ('is_done', models.BooleanField(default=False, editable=False)),
                ('index_no', models.PositiveIntegerField(db_index=True, default=1, verbose_name='Số thứ tự buổi')),
                ('booking', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_treatment.booking', verbose_name='Lịch hẹn')),
                ('designated_experts', models.ManyToManyField(blank=True, related_name='treatment_session', to=settings.AUTH_USER_MODEL)),
                ('floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_home.floor', verbose_name='Tầng')),
                ('treatment_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_sessions', to='app_treatment.treatmentrequest', verbose_name='Yêu cầu trị liệu')),
            ],
        ),
        migrations.CreateModel(
            name='SessionTechicalSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_minutes', models.PositiveIntegerField(default=10, verbose_name='Thời gian (phút)')),
                ('room', models.CharField(blank=True, max_length=100, null=True, verbose_name='Phòng')),
                ('has_come', models.BooleanField(db_index=True, default=False, verbose_name='Trạng thái')),
                ('expert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='session_tech_settings', to='app_hr.hruserprofile')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_treatment.treatmentsession', verbose_name='Buổi trị liệu')),
                ('techical_setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_product.techicalsetting', verbose_name='Kỹ thuật thực hiện')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceAssign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('treatment_method', models.TextField(blank=True, null=True)),
                ('services_has_paid', models.BooleanField(default=False)),
                ('assigned_expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('doctor_process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_assign', to='app_treatment.doctorprocess')),
                ('service_discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_home.discount')),
                ('services', models.ManyToManyField(blank=True, through='app_treatment.diagnosis_service', to='app_product.service')),
            ],
        ),
        migrations.CreateModel(
            name='ReExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Chờ tái khám'), ('completed', 'Đã tái khám')], default='pending', max_length=20)),
                ('appointment_date', models.DateField(blank=True, null=True, verbose_name='Ngày hẹn tái khám')),
                ('doctor_evaluation', models.TextField(blank=True, null=True, verbose_name='Đánh giá của bác sĩ')),
                ('recommendation', models.TextField(blank=True, null=True, verbose_name='Lời khuyên')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_treatment.bill')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_amount', models.DecimalField(decimal_places=2, max_digits=25)),
                ('paid_method', models.CharField(choices=[('cash', 'Tiền mặt'), ('transfer', 'Chuyển khoản')], max_length=25)),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('ar_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_histories', to='app_treatment.aritem')),
                ('bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='app_treatment.bill')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='app_customer.customer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpertSessionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('techical_setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_product.techicalsetting')),
                ('treatment_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_treatment.treatmentrequest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('note', models.TextField(blank=True, null=True)),
                ('test_result', models.TextField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app_treatment.examinationorder')),
                ('test_service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='app_home.testservice')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorHealthCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nearest_examination', models.TextField(blank=True, null=True)),
                ('blood_presure', models.CharField(blank=True, max_length=20, null=True)),
                ('heart_beat', models.CharField(blank=True, max_length=20, null=True)),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('weight', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('breathing_beat', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('customer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_health_check', to='app_customer.customer')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bác sĩ khám sức khỏe',
                'verbose_name_plural': 'Bác sĩ khám sức khỏe',
            },
        ),
        migrations.AddField(
            model_name='diagnosis_service',
            name='service_assign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosis_services', to='app_treatment.serviceassign'),
        ),
        migrations.AddField(
            model_name='diagnosis_service',
            name='treatment_package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_home.treatmentpackage'),
        ),
        migrations.AddField(
            model_name='diagnosis_medicine',
            name='doctor_process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosis_medicines', to='app_treatment.doctorprocess'),
        ),
        migrations.AddField(
            model_name='diagnosis_medicine',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_product.product'),
        ),
        migrations.AddField(
            model_name='diagnosis_medicine',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_home.unit'),
        ),
        migrations.CreateModel(
            name='ClinicalExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('diagnosis', models.TextField(blank=True, null=True)),
                ('present_symptom', models.TextField(blank=True, null=True)),
                ('treatment_method', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_home.department')),
                ('doctor_health_check_process', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='clinical_examination', to='app_treatment.doctorhealthcheck')),
                ('floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_home.floor')),
            ],
        ),
        migrations.AddConstraint(
            model_name='paymenthistory',
            constraint=models.UniqueConstraint(fields=('bill',), name='uniq_one_payment_per_bill'),
        ),
        migrations.AlterUniqueTogether(
            name='expertsessionrecord',
            unique_together={('user', 'treatment_request', 'techical_setting')},
        ),
        migrations.AlterUniqueTogether(
            name='examinationorderitem',
            unique_together={('order', 'test_service')},
        ),
        migrations.AddIndex(
            model_name='doctorprocess',
            index=models.Index(fields=['customer', 'is_active'], name='app_treatme_custome_9fac0f_idx'),
        ),
        migrations.AddIndex(
            model_name='doctorprocess',
            index=models.Index(fields=['customer', 'version'], name='app_treatme_custome_64806a_idx'),
        ),
        migrations.AddConstraint(
            model_name='doctorprocess',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('customer',), name='uniq_active_process_per_customer', violation_error_message='Mỗi khách hàng chỉ có 1 DoctorProcess đang hiệu lực.'),
        ),
        migrations.AddIndex(
            model_name='aritem',
            index=models.Index(fields=['customer', 'status'], name='app_treatme_custome_42869d_idx'),
        ),
    ]
